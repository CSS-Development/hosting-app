@import url("https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,400;1,100;1,900&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Anton");
@import url("https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&display=swap");

* {
  /* this applies width and height only to the content and doesnt includes the padding and border */
  box-sizing: border-box;
}

html {
  height: 100%;
}

body {
  font-family: "Montserrat", sans-serif;
  /* font-family: "Unknown", "Also-Unknown", sans-serif; */
  margin: 0;
  display: grid; /* any element using display different than static will not be part of the grid since are outside the document flow */
  grid-template-rows: 3.5rem auto fit-content(8rem); /* fit-content will be used once the space is smaller and will get as much as needed by the content when it grows*/
  height: 100%;
  grid-template-areas:
    "header"
    "main"
    "footer";
}

main {
  grid-area: main;
}

/* Backdrop */
.backdrop {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 100;
  display: none;
  opacity: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.5);
  transition: opacity 0.2s linear;
}

/* Header */
.main-header {
  width: 100%;
  position: fixed;
  top: 0;
  left: 0;
  background: #2ddf5c;
  padding: 0.5rem 1rem;
  /* when two elements have the same z-index (e.g: 0 or auto) the one that will go front is the one that shows up later in our code 
    Example: 
    
    <div class="background"/>
    <div class="main-header>this one will be on front due to the order ir our htlm code even though they both have the same z-index
      {content}
    </div> -> 
  */
  z-index: 2;
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.toggle-button {
  width: 3rem;
  background: transparent;
  border: none;
  cursor: pointer;
  padding-top: 0;
  padding-bottom: 0;
  vertical-align: middle;
}

.toggle-button:focus {
  outline: none;
}

.toggle-button__bar {
  width: 100%;
  height: 0.2rem;
  background: black;
  display: block;
  margin: 0.6rem 0;
}

.main-header__brand {
  color: #0e4f1f;
  text-decoration: none;
  font-weight: bold;
  /* height: 1.4rem; */
  /* width: 22px; */
}

.main-header__brand img {
  height: 2.5rem; /* makes the image use its original size not the one from its container */
  /* width: 100%; */
  vertical-align: middle;
}

.main-nav {
  display: none;
}

.main-nav__items {
  margin: 0;
  padding: 0;
  list-style: none;
  display: flex;
}
.main-nav__item {
  margin: 0 1rem;
}

.main-nav__item a,
.mobile-nav__item a {
  text-decoration: none;
  color: #0e4f1f;
  font-weight: bold;
  padding: 3px 0;
}

/* .main-nav__item a::after {
    content: " (Link)";
    color: red;
  } */

.main-nav__item a:hover,
.main-nav__item a:active {
  color: white;
  border-bottom: 5px solid white;
}

.main-nav__item--cta {
  animation: wiggle 400ms 3s 8 ease-out none;
}

/* p::first-letter {
    font-size: 20px;
    color: red;
  } */
/* cta = Call to Action */
.main-nav__item--cta a,
.mobile-nav__item--cta a {
  color: white;
  background: #ff1b68;
  padding: 0.5rem 1rem;
  border-radius: 8px;
}

.main-nav__item--cta a:hover,
.main-nav__item--cta a:active,
.mobile-nav__item--cta a:hover,
.mobile-nav__item--cta a:active {
  background: white;
  color: #ff1b68;
  border: none;
}

@media (min-width: 40rem) {
  .toggle-button__bar {
    display: none;
  }

  .main-header__brand {
    height: 3rem;
    display: inline-block;
  }

  .main-nav {
    display: flex;
  }
}

/* Footer */
.main-footer {
  background-color: black;
  padding: 2rem;
  margin-top: 3rem;
  /* grid-row: 3 / 4; */
  grid-area: footer;
}

.main-footer__links {
  list-style: none;
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.main-footer__link {
  margin: 0.5rem 0;
}

.main-footer__link a {
  color: white;
  text-decoration: none;
}

.main-footer__link a:hover,
.main-footer__link a:active {
  color: #ccc;
}

@media (min-width: 40rem) {
  .main-footer__link {
    margin: 0 1rem;
  }

  .main-footer__links {
    flex-direction: row;
    align-items: center;
    justify-content: center;
  }
}

.mobile-nav {
  position: fixed;
  z-index: 101;
  top: 0;
  left: 0;
  background: white;
  width: 80%;
  height: 100vh;
  transform: translateX(-100%);
  transition: transform 1s cubic-bezier(0.22, 1, 0.36, 1);
}

.mobile-nav__items {
  /* width: 90%; */

  height: 100%;
  list-style: none;
  margin: 0 auto;
  padding: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.mobile-nav__item {
  margin: 1rem 0;
}

.mobile-nav__item a {
  font-size: 1.5rem;
}

.button {
  background: #0e4f1f;
  color: white;
  font: inherit;
  border: 1.5px solid #0e4f1f;
  padding: 0.5rem;
  border-radius: 8px;
  font-weight: bold;
  cursor: pointer;
}

.button:hover,
.button:active {
  background: white;
  color: #0e4f1f;
}

.button:focus {
  outline: none;
}

.open {
  display: block !important;
  opacity: 1 !important;
  transform: translateY(0) !important;
  /* here is nt needed to add  transform: translateX(0) !important; for the mobile nav because this class implecetely overrides the values of the transform property */
}

.button[disabled] {
  cursor: not-allowed;
  border: #a1a1a1;
  background: #ccc;
  color: #a1a1a1;
}

@keyframes wiggle {
  0% {
    /* starting state */
    transform: rotateZ(0deg);
  }
  50% {
    transform: rotateZ(-10deg);
  }
  100% {
    /* ending state */
    transform: rotateZ(10deg);
  }
}
